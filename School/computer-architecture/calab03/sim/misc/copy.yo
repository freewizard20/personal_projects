                            | # Initial code
0x000: 30f40001000000000000 | 	irmovq Stack,%rsp
0x00a: 30f20300000000000000 | 	irmovq $3,%rdx
0x014: 30f65000000000000000 | 	irmovq dest,%rsi
0x01e: 30f73800000000000000 | 	irmovq src,%rdi
0x028: 806800000000000000   | 	call copy_block
0x031: 00                   | 	halt
                            | 
0x038:                      | .align 8
                            | # Source array
0x038:                      | src:
0x038: 0a00000000000000     | 	.quad 0x00a
0x040: b000000000000000     | 	.quad 0x0b0
0x048: 000c000000000000     | 	.quad 0xc00
                            | 
                            | # Destination array
0x050:                      | dest:
0x050: 1101000000000000     | 	.quad 0x111
0x058: 2202000000000000     | 	.quad 0x222
0x060: 3303000000000000     | 	.quad 0x333
                            | 
                            | # long copy_block(long *src, long *dest, long len)
                            | # src in %rdi, dest in %rsi, len in %rdx
0x068:                      | copy_block:
0x068: 6222                 | 	andq %rdx, %rdx
0x06a: 73ae00000000000000   | 	je End
0x073: 50170000000000000000 | Loop:	mrmovq	(%rdi), %rcx
0x07d: 40160000000000000000 | 	rmmovq	%rcx,(%rsi)
0x087: 6310                 | 	xorq	%rcx, %rax
0x089: 30f1ffffffffffffffff | 	irmovq	$-1, %rcx
0x093: 6012                 | 	addq	%rcx, %rdx
0x095: 30f10800000000000000 | 	irmovq	$8, %rcx
0x09f: 6017                 | 	addq	%rcx, %rdi
0x0a1: 6016                 | 	addq	%rcx, %rsi
0x0a3: 6222                 | 	andq	%rdx, %rdx
0x0a5: 747300000000000000   | 	jne Loop
                            | 
0x0ae: 90                   | End:	ret			# Return
                            | 
0x100:                      | .pos 0x100
0x100:                      | Stack:
                            | 
                            | 
                            | 
                            | 
                            | 
                            | 
